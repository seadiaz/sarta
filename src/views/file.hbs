<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col-sm-6 offset-sm-3">
          <h1>Welcome to Sarta!</h1>

          <div class="row">
            <div class="col-sm-12">
              Room: {{room}}
            </div>
            <div class="col-sm-12">
              My ID: <span id="p2p-id"></span>
            </div>
            <div class="col-sm-12">
              Socket status: <span id="socket-status"></span>
            </div>
            <div class="col-sm-12">
              P2P status: <span id="p2p-status"></span>
            </div>
            <div class="col-sm-12" id="drop-zone" style="border: 1px solid black; height: 300px;">
            </div>
            <div class="col-sm-12" id="download-zone">
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="//code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script src="//cdn.jsdelivr.net/npm/lodash@4.17.5/lodash.min.js"></script>
    <script src="//cdn.rawgit.com/lil-js/uuid/0.1.0/uuid.js"></script>
    <script src="/assets/pear.min.js"></script>
    <script>
    $(function () {
      let peer = new Peer({key: 'peerjs', host: 'sarta-peerjs-server.herokuapp.com', port: 443, secure: true, path: '/'});

      function configConnection(conn) {
        $('#p2p-status').html('ðŸ˜ƒ')

        function base64ToArrayBuffer(base64) {
          let binaryString =  window.atob(base64);
          let binaryLen = binaryString.length;
          let bytes = new Uint8Array(binaryLen);
          for (let i = 0; i < binaryLen; i++)        {
              let ascii = binaryString.charCodeAt(i);
              bytes[i] = ascii;
          }
          return bytes;
        }

        conn.on('data', (data) => {
            let fileBytes = base64ToArrayBuffer(data.content)
            let blob = new window.Blob([fileBytes], {type: data.type})
            let urlCreator = window.URL || window.webkitURL
            let fileUrl = urlCreator.createObjectURL(blob)
            let a = document.createElement('a')
            a.href = fileUrl
            a.innerHTML = data.name
            a.download = data.name
            a.value = data.name
            let div = document.getElementById('download-zone');
            div.appendChild(a)
            a.click()
        });

        function handleFileSelect(evt) {
          evt.stopPropagation();
          evt.preventDefault();
          let file = evt.dataTransfer.files[0];
          let reader  = new FileReader();
          reader.addEventListener('load', (evnt) => {
            let content = evnt.target.result.replace(/^data:.*;base64,/, '')
            conn.send({content, name: file.name, type: file.type, size:file.size})
          }, false);

          reader.readAsDataURL(file);
        }

        function handleDragOver(evt) {
          evt.stopPropagation();
          evt.preventDefault();
          evt.dataTransfer.dropEffect = 'copy';
        }

        var dropZone = document.getElementById('drop-zone');
        dropZone.addEventListener('dragover', handleDragOver, false);
        dropZone.addEventListener('drop', handleFileSelect, false);
      }

      peer.on('open', (id) => {
        $('#p2p-id').html(id)
        let socket = io()
        socket.on('connect', () => {
          $('#socket-status').html('ðŸ˜ƒ')
          socket.emit('arrived', {id: id})
          socket.on('peer:arrived', (data) => {
            conn = peer.connect(data.id);
            configConnection(conn)
          })
        });
        socket.on('disconnect', () => {
          $('#socket-status').html('ðŸ˜”')
        });
      });

      peer.on('connection', (conn) => {
        configConnection(conn)
      });
    });
    </script>
  </body>
</html>
